{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\netflix\\\\src\\\\Row.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport MovieTrailer from \"movie-trailer\";\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\n\nfunction Row(_ref) {\n  let {\n    title,\n    fetchURL,\n    isLargeRow\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer__viewer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"close__button\",\n        src: \"https://upload.wikimedia.org/wikipedia/commons/7/72/VisualEditor_-_Icon_-_Close_-_white.svg\",\n        alt: \"Close Button\",\n        onClick: () => closeTrailer()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: trailerUrl,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","MovieTrailer","base_url","Row","title","fetchURL","isLargeRow","trailerUrl","closeTrailer","opts"],"sources":["C:/Users/DELL/Documents/netflix/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport MovieTrailer from \"movie-trailer\";\r\nimport'./Row.css'\r\n\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  return (\r\n    <div className=\"row\" key={title}>\r\n      {/* Title */}\r\n      <h2>{title}</h2>\r\n      {/*Poster Container */}\r\n      <div className=\"row__posters\">\r\n      </div>\r\n      {/* When trailerUrl is available, play the youtube video */}\r\n      {trailerUrl && (\r\n        <div className=\"trailer__viewer\">\r\n          <img\r\n            className=\"close__button\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/7/72/VisualEditor_-_Icon_-_Close_-_white.svg\"\r\n            alt=\"Close Button\"\r\n            onClick={() => closeTrailer()}\r\n          />\r\n          <YouTube videoId={trailerUrl} opts={opts}></YouTube>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAM,WAAN;;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,SAASC,GAAT,OAA8C;EAAA,IAAjC;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAiC;EAC5C,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEE;MAAA,UAAKF;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAJF,EAOGG,UAAU,iBACT;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACE;QACE,SAAS,EAAC,eADZ;QAEE,GAAG,EAAC,6FAFN;QAGE,GAAG,EAAC,cAHN;QAIE,OAAO,EAAE,MAAMC,YAAY;MAJ7B;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,OAAD;QAAS,OAAO,EAAED,UAAlB;QAA8B,IAAI,EAAEE;MAApC;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA,GAA0BL,KAA1B;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;KAtBQD,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}